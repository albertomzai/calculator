{
  "api_contract": {
    "ruta": "/api/calculate",
    "metodo": "POST",
    "descripcion": "Endpoint para evaluar una expresión matemática segura.",
    "parametros_entrada": {
      "expression": "string"
    },
    "respuesta_esperada": {
      "result": "number"
    }
  },
  "contrato_qa_e2e": {
    "display": "display",
    "btn-0": "btn-0",
    "btn-1": "btn-1",
    "btn-2": "btn-2",
    "btn-3": "btn-3",
    "btn-4": "btn-4",
    "btn-5": "btn-5",
    "btn-6": "btn-6",
    "btn-7": "btn-7",
    "btn-8": "btn-8",
    "btn-9": "btn-9",
    "btn-add": "btn-add",
    "btn-subtract": "btn-subtract",
    "btn-multiply": "btn-multiply",
    "btn-divide": "btn-divide",
    "btn-decimal": "btn-decimal",
    "btn-clear": "btn-clear",
    "btn-equals": "btn-equals"
  },
  "plan": [
    {
      "etapa": "backend",
      "tareas": [
        "Crear la estructura de directorios para el proyecto Flask con un paquete backend.",
        "Implementar la factory create_app en backend/__init__.py y configurar el Blueprint.",
        "Definir el endpoint POST '/api/calculate' en routes.py que reciba JSON con 'expression'.",
        "Validar la expresión recibida y evaluarla de forma segura usando una librería adecuada (e.g., asteval).",
        "Devolver el resultado en formato JSON bajo la clave 'result', manejando errores y respondiendo 400 en caso de expresión inválida.",
        "Crear requirements.txt con Flask y cualquier paquete de evaluación segura.",
        "Añadir un test simple usando pytest que verifique el endpoint con expresiones válidas e inválidas."
      ]
    },
    {
      "etapa": "frontend",
      "tareas": [
        "Generar frontend/index.html con una estructura HTML5 que represente la calculadora clásica.",
        "Incluir elementos de pantalla y botones con los data-testid definidos en el contrato E2E.",
        "Añadir estilos CSS usando Grid o Flexbox para organizar los botones.",
        "Implementar JavaScript inline que capture clics en los botones, construya la expresión en la pantalla y envíe una petición fetch POST a '/api/calculate' al pulsar '='.",
        "Mostrar el resultado devuelto por la API en la pantalla de la calculadora."
      ]
    },
    {
      "etapa": "e2e",
      "tareas": [
        "Crear un archivo cypress/e2e/calculator.cy.js que navegue a la página principal, simule una operación (por ejemplo '7+3='), y verifique que el resultado mostrado es correcto.",
        "Utilizar los data-testid del contrato E2E para seleccionar elementos en las pruebas."
      ]
    }
  ]
}
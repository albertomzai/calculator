['# tests/test_backend.py - Pruebas unitarias para la API de cálculo', '', 'import pytest', '', 'from backend import create_app', '', '@pytest.fixture', 'def client():', '    app = create_app()', "    app.config['TESTING'] = True", '    with app.test_client() as c:', '        yield c', '', 'def test_calculate_success(client):', '    """Verifica que una expresión válida sea evaluada correctamente."""', "    response = client.post('/api/calculate', json={'expression': '5*8-3'})", '    assert response.status_code == 200', '    data = response.get_json()', '    assert data is not None', "    assert data['result'] == 37", '', 'def test_calculate_invalid_syntax(client):', '    """Verifica que una expresión con sintaxis inválida devuelva error 400."""', "    response = client.post('/api/calculate', json={'expression': '5+/2'})", '    assert response.status_code == 400', '    data = response.get_json()', "    assert 'error' in data", '', 'def test_missing_expression_key(client):', '    """Verifica que la ausencia de la clave \'expression\' devuelva error 400."""', "    response = client.post('/api/calculate', json={})", '    assert response.status_code == 400', '    data = response.get_json()', "    assert 'error' in data"]